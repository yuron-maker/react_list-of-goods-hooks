{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reverseStatus","setReverseStatus","sortBy","setSortBy","visibleGoods","goods","preperedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EA9BR,SACEC,EACAH,EACAF,GAEA,IAAMM,EAAa,YAAOD,GAmB1B,OAjBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAKXZ,GACFM,EAAcO,UAGTP,EAMcQ,CAAiBjB,EAAiBK,EAAQF,GAO/D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAUP,EAASc,WAClCK,UAAWG,IAAW,iBAAkB,CACtC,WAAYhB,IAAWN,EAASc,WAJpC,iCAUA,wBACEM,KAAK,SACLC,QAAS,kBAAMd,EAAUP,EAASgB,SAClCG,UAAWG,IAAW,oBAAqB,CACzC,WAAYhB,IAAWN,EAASgB,SAJpC,4BAUA,wBACEI,KAAK,SACLC,QAAS,kBAAMhB,GAAkBD,IACjCe,UAAWG,IAAW,oBAAqB,CACzC,YAAalB,IAJjB,sBAUa,KAAXE,GAAiBF,IACjB,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QA1CI,WACZd,EAAU,IACVF,GAAiB,IAqCX,sBAUJ,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCvGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6075138.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortBy: string,\n  reverseStatus: boolean,\n):string[] {\n  const preperedGoods = [...goods];\n\n  if (sortBy) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n        case SortType.length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseStatus) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reverseStatus, setReverseStatus] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, reverseStatus);\n\n  const reset = () => {\n    setSortBy('');\n    setReverseStatus(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.alphabet)}\n          className={classNames('button is-info', {\n            'is-light': sortBy !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortBy(SortType.length)}\n          className={classNames('button is-success', {\n            'is-light': sortBy !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseStatus(!reverseStatus)}\n          className={classNames('button is-warning', {\n            'is-light': !reverseStatus,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== '' || reverseStatus) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}